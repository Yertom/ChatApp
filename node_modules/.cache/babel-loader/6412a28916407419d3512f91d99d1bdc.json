{"ast":null,"code":"import _classCallCheck from \"D:\\\\Front end pro\\\\Projects1\\\\TestProject\\\\hello-world\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Front end pro\\\\Projects1\\\\TestProject\\\\hello-world\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Front end pro\\\\Projects1\\\\TestProject\\\\hello-world\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Front end pro\\\\Projects1\\\\TestProject\\\\hello-world\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Front end pro\\\\Projects1\\\\TestProject\\\\hello-world\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Front end pro\\\\Projects1\\\\TestProject\\\\hello-world\\\\src\\\\components\\\\AppContainer\\\\CommentSection\\\\CommentSection.js\";\nimport React, { Component } from 'react';\nimport Comment from './Comment/Comment';\nimport Grid from '@material-ui/core/Grid';\n\nvar CommentSection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentSection, _Component);\n\n  function CommentSection(props) {\n    var _this;\n\n    _classCallCheck(this, CommentSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentSection).call(this, props));\n    _this.state = {\n      currentComments: []\n    };\n    return _this;\n  }\n\n  _createClass(CommentSection, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://jsonplaceholder.typicode.com/comments?postId=\".concat(this.props.match.params.idpost)).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this2.setState({\n          currentComments: json\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this3 = this;\n\n      if (prevProps.match.params.idpost !== this.props.match.params.idpost) {\n        fetch(\"https://jsonplaceholder.typicode.com/comments?postId=\".concat(this.props.match.params.idpost)).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          _this3.setState({\n            currentComments: json\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var comments = this.state.currentComments.map(function (item) {\n        return React.createElement(Grid, {\n          item: true,\n          container: true,\n          justify: \"center\",\n          alignContent: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(Comment, {\n          commentInfo: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        direction: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, comments);\n    }\n  }]);\n\n  return CommentSection;\n}(Component);\n\nexport default CommentSection;","map":{"version":3,"sources":["D:\\Front end pro\\Projects1\\TestProject\\hello-world\\src\\components\\AppContainer\\CommentSection\\CommentSection.js"],"names":["React","Component","Comment","Grid","CommentSection","props","state","currentComments","fetch","match","params","idpost","then","response","json","setState","prevProps","comments","map","item"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;IAIMC,c;;;;;AACF,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,wFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,eAAe,EAAE;AADR,KAAb;AAFe;AAKlB;;;;wCAEmB;AAAA;;AAChBC,MAAAA,KAAK,gEAAyD,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,MAAjF,EAAL,CACKC,IADL,CACU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADlB,EAEKF,IAFL,CAEU,UAAAE,IAAI,EAAI;AACV,QAAA,MAAI,CAACC,QAAL,CAAc;AACVR,UAAAA,eAAe,EAAEO;AADP,SAAd;AAGH,OANL;AAOH;;;uCAEkBE,S,EAAW;AAAA;;AAC1B,UAAIA,SAAS,CAACP,KAAV,CAAgBC,MAAhB,CAAuBC,MAAvB,KAAkC,KAAKN,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,MAA9D,EAAsE;AAClEH,QAAAA,KAAK,gEAAyD,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,MAAjF,EAAL,CACKC,IADL,CACU,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,SADlB,EAEKF,IAFL,CAEU,UAAAE,IAAI,EAAI;AACV,UAAA,MAAI,CAACC,QAAL,CAAc;AACVR,YAAAA,eAAe,EAAEO;AADP,WAAd;AAGH,SANL;AAOH;AACJ;;;6BAEQ;AACL,UAAIG,QAAQ,GAAG,KAAKX,KAAL,CAAWC,eAAX,CAA2BW,GAA3B,CAA+B,UAACC,IAAD,EAAU;AACpD,eAAO,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,SAAS,MAApB;AAAqB,UAAA,OAAO,EAAE,QAA9B;AAAwC,UAAA,YAAY,EAAE,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgE,oBAAC,OAAD;AAAS,UAAA,WAAW,EAAEA,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhE,CAAP;AACH,OAFc,CAAf;AAGA,aAAQ,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,IAAI,EAAE,QAAtB;AAAgC,QAAA,SAAS,EAAE,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACHF,QADG,CAAR;AAGH;;;;EArCwBhB,S;;AAwC7B,eAAeG,cAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Comment from './Comment/Comment'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n\r\nclass CommentSection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentComments: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`https://jsonplaceholder.typicode.com/comments?postId=${this.props.match.params.idpost}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                this.setState({\r\n                    currentComments: json,\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.idpost !== this.props.match.params.idpost) {\r\n            fetch(`https://jsonplaceholder.typicode.com/comments?postId=${this.props.match.params.idpost}`)\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    this.setState({\r\n                        currentComments: json,\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let comments = this.state.currentComments.map((item) => {\r\n            return <Grid item container justify={\"center\"} alignContent={\"center\"}><Comment commentInfo={item}/></Grid>;\r\n        });\r\n        return (<Grid container wrap={\"nowrap\"} direction={\"column\"}>\r\n            {comments}\r\n        </Grid>)\r\n    }\r\n}\r\n\r\nexport default CommentSection;"]},"metadata":{},"sourceType":"module"}