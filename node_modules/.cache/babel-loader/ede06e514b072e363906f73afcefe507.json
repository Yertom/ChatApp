{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\src\\\\components\\\\AppContainer\\\\AppContainer.js\";\nimport React, { Component, Fragment } from 'react';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Chatkit from '@pusher/chatkit-client';\nimport ConfigFile from '../../config/config';\nimport ChannelsComponent from \"./ChannelsComponent/ChannelsComponent\";\nimport InputComponent from \"./InputComponent/InputComponent\";\nimport CreateChannel from \"./CreateChannel/CreateChannel\";\nimport ChatComponent from \"./ChatComponent/ChatComponent\";\n\nvar AppContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppContainer, _Component);\n\n  function AppContainer(props) {\n    var _this;\n\n    _classCallCheck(this, AppContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppContainer).call(this, props));\n\n    _this.getChannels = function () {\n      _this.setState({\n        channelsList: _this.currentUser.rooms\n      });\n    };\n\n    _this.changeChannel = function (channelId) {\n      _this.currentUser.subscribeToRoomMultipart({\n        roomId: _this.currentUser.rooms[0].id,\n        hooks: {\n          onMessage: function onMessage(message) {\n            _this.setState({\n              currentChannelId: channelId,\n              currentUserId: _this.currentUser.encodedId,\n              currentMessages: [].concat(_toConsumableArray(_this.state.currentMessages), [message])\n            });\n          }\n        },\n        messageLimit: 10\n      });\n    };\n\n    _this.sendMessage = function (event, message) {\n      console.log(message);\n\n      _this.currentUser.sendSimpleMessage({\n        text: message,\n        roomId: _this.state.currentChannelId\n      });\n    };\n\n    _this.state = {\n      channelsList: [],\n      currentChannelId: \"\",\n      currentUserId: \"\",\n      currentMessages: []\n    };\n    return _this;\n  }\n\n  _createClass(AppContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var tokenProvider = new Chatkit.TokenProvider({\n        url: ConfigFile.tokenEndpoint\n      });\n      var chatManager = new Chatkit.ChatManager({\n        instanceLocator: ConfigFile.InstanceLocator,\n        userId: \"User1\",\n        tokenProvider: tokenProvider\n      });\n      chatManager.connect().then(function (currentUser) {\n        _this2.currentUser = currentUser;\n\n        _this2.getChannels();\n      }).catch(function (error) {\n        console.error(\"error:\", error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var inputStyle = {\n        marginLeft: '10px'\n      };\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        wrap: \"nowrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(ChannelsComponent, {\n        channelsList: this.state.channelsList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(ChatComponent, {\n        currentMessages: this.state.currentMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n        wrap: \"nowrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(CreateChannel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        style: inputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(InputComponent, {\n        sendMessage: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AppContainer;\n}(Component);\n\nexport default AppContainer;","map":{"version":3,"sources":["D:\\Front end pro\\Projects1\\ChatApp\\chatApp\\src\\components\\AppContainer\\AppContainer.js"],"names":["React","Component","Fragment","Grid","Chatkit","ConfigFile","ChannelsComponent","InputComponent","CreateChannel","ChatComponent","AppContainer","props","getChannels","setState","channelsList","currentUser","rooms","changeChannel","channelId","subscribeToRoomMultipart","roomId","id","hooks","onMessage","message","currentChannelId","currentUserId","encodedId","currentMessages","state","messageLimit","sendMessage","event","console","log","sendSimpleMessage","text","tokenProvider","TokenProvider","url","tokenEndpoint","chatManager","ChatManager","instanceLocator","InstanceLocator","userId","connect","then","catch","error","inputStyle","marginLeft"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport Grid from '@material-ui/core/Grid/Grid';\r\nimport Chatkit from '@pusher/chatkit-client';\r\nimport ConfigFile from '../../config/config';\r\nimport ChannelsComponent from \"./ChannelsComponent/ChannelsComponent\";\r\nimport InputComponent from \"./InputComponent/InputComponent\";\r\nimport CreateChannel from \"./CreateChannel/CreateChannel\";\r\nimport ChatComponent from \"./ChatComponent/ChatComponent\";\r\n\r\n\r\nclass AppContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            channelsList: [],\r\n            currentChannelId: \"\",\r\n            currentUserId: \"\",\r\n            currentMessages: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const tokenProvider = new Chatkit.TokenProvider({\r\n            url: ConfigFile.tokenEndpoint\r\n        });\r\n\r\n        const chatManager = new Chatkit.ChatManager({\r\n            instanceLocator: ConfigFile.InstanceLocator,\r\n            userId: \"User1\",\r\n            tokenProvider: tokenProvider\r\n        });\r\n\r\n        chatManager\r\n            .connect()\r\n            .then(currentUser => {\r\n                this.currentUser = currentUser;\r\n                this.getChannels();\r\n            })\r\n            .catch(error => {\r\n                console.error(\"error:\", error);\r\n            });\r\n    }\r\n\r\n    getChannels = () => {\r\n        this.setState({channelsList: this.currentUser.rooms,})\r\n    };\r\n\r\n    changeChannel = (channelId) => {\r\n\r\n        this.currentUser.subscribeToRoomMultipart({\r\n            roomId: this.currentUser.rooms[0].id,\r\n            hooks: {\r\n                onMessage: message => {\r\n                    this.setState({\r\n                        currentChannelId: channelId,\r\n                        currentUserId: this.currentUser.encodedId,\r\n                        currentMessages: [...this.state.currentMessages, message],\r\n                    })\r\n                }\r\n            },\r\n            messageLimit: 10,\r\n        });\r\n\r\n    };\r\n\r\n    sendMessage = (event, message) => {\r\n        console.log(message);\r\n        this.currentUser.sendSimpleMessage({\r\n            text: message,\r\n            roomId: this.state.currentChannelId\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let inputStyle = {\r\n            marginLeft: '10px',\r\n        };\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction={\"row\"} wrap={\"nowrap\"}>\r\n                    <Grid item><ChannelsComponent channelsList={this.state.channelsList}/></Grid>\r\n                    <Grid item xs={10}><ChatComponent currentMessages={this.state.currentMessages}/></Grid>\r\n                </Grid>\r\n                <Grid container direction={\"row\"} alignContent={\"center\"} alignItems={\"center\"} wrap={\"nowrap\"}>\r\n                    <Grid item><CreateChannel/></Grid>\r\n                    <Grid item xs={10} style={inputStyle}><InputComponent sendMessage={this.sendMessage}/></Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppContainer;\r\n"]},"metadata":{},"sourceType":"module"}