{"ast":null,"code":"import _classCallCheck from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\src\\\\components\\\\LogInForm\\\\LogInForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from \"react-router-dom\";\nimport Chatkit from \"@pusher/chatkit-client/dist/web/chatkit\";\nimport ConfigFile from \"../../config/config\";\n\nvar styles = function styles(theme) {\n  return {\n    main: _defineProperty({\n      width: 'auto',\n      display: 'block',\n      marginLeft: theme.spacing.unit * 3,\n      marginRight: theme.spacing.unit * 3\n    }, theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2), {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }),\n    paper: {\n      marginTop: theme.spacing.unit * 8,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: \"\".concat(theme.spacing.unit * 2, \"px \").concat(theme.spacing.unit * 3, \"px \").concat(theme.spacing.unit * 3, \"px\")\n    },\n    avatar: {\n      margin: theme.spacing.unit,\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing.unit\n    },\n    submit: {\n      marginTop: theme.spacing.unit * 3\n    }\n  };\n};\n\nvar LogInForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogInForm, _Component);\n\n  function LogInForm(props) {\n    var _this;\n\n    _classCallCheck(this, LogInForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LogInForm).call(this, props));\n\n    _this.onSubmit = function (event) {\n      var tokenProvider = new Chatkit.TokenProvider({\n        url: ConfigFile.tokenEndpoint\n      });\n      var chatManager = new Chatkit.ChatManager({\n        instanceLocator: ConfigFile.InstanceLocator,\n        userId: \"\".concat(_this.props.match.params.user),\n        tokenProvider: tokenProvider\n      });\n      chatManager.connect().then(function (currentUser) {\n        currentUser.addUserToRoom({\n          userId: \"\".concat(_this.state.username),\n          roomId: 19863388\n        }).then(function () {\n          console.log('Added keith to room 123');\n        }).catch(function (err) {\n          console.log(\"Error adding keith to room 123: \".concat(err));\n        });\n      }).catch(function (error) {\n        console.error(\"error:\", error);\n      });\n    };\n\n    _this.handleChange = function (event) {\n      var target = event.target.name;\n\n      _this.setState(_defineProperty({}, target, event.target.value));\n    };\n\n    _this.state = {\n      username: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LogInForm, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"main\", {\n        className: classes.main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: classes.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(LockOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Sign in\"), React.createElement(\"form\", {\n        className: classes.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Username\"), React.createElement(Input, {\n        onChange: this.handleChange,\n        value: this.state.username,\n        id: \"email\",\n        name: \"username\",\n        autoComplete: \"name\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          value: \"remember\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }),\n        label: \"Remember me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/\".concat(this.state.username),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Sign in\")))));\n    }\n  }]);\n\n  return LogInForm;\n}(Component);\n\nLogInForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(LogInForm);","map":{"version":3,"sources":["D:\\Front end pro\\Projects1\\ChatApp\\chatApp\\src\\components\\LogInForm\\LogInForm.js"],"names":["React","Component","PropTypes","Avatar","Button","CssBaseline","FormControl","FormControlLabel","Checkbox","Input","InputLabel","LockOutlinedIcon","Paper","Typography","withStyles","Link","Chatkit","ConfigFile","styles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","avatar","margin","backgroundColor","palette","secondary","form","submit","LogInForm","props","onSubmit","event","tokenProvider","TokenProvider","url","tokenEndpoint","chatManager","ChatManager","instanceLocator","InstanceLocator","userId","match","params","user","connect","then","currentUser","addUserToRoom","state","username","roomId","console","log","catch","err","error","handleChange","target","name","setState","value","classes","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport {Link} from \"react-router-dom\";\r\nimport Chatkit from \"@pusher/chatkit-client/dist/web/chatkit\";\r\nimport ConfigFile from \"../../config/config\";\r\n\r\nconst styles = theme => ({\r\n    main: {\r\n        width: 'auto',\r\n        display: 'block',\r\n        marginLeft: theme.spacing.unit * 3,\r\n        marginRight: theme.spacing.unit * 3,\r\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n            width: 400,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing.unit * 8,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing.unit,\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit,\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n});\r\n\r\n\r\nclass LogInForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            username:\"\",\r\n        };\r\n\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        const tokenProvider = new Chatkit.TokenProvider({\r\n            url: ConfigFile.tokenEndpoint\r\n        });\r\n\r\n        const chatManager = new Chatkit.ChatManager({\r\n            instanceLocator: ConfigFile.InstanceLocator,\r\n            userId: `${this.props.match.params.user}`,\r\n            tokenProvider: tokenProvider\r\n        });\r\n        chatManager\r\n            .connect()\r\n            .then(currentUser => {\r\n                currentUser.addUserToRoom({\r\n                    userId: `${this.state.username}`,\r\n                    roomId: 19863388\r\n                })\r\n                .then(() => {\r\n                    console.log('Added keith to room 123')\r\n                })\r\n                .catch(err => {\r\n                    console.log(`Error adding keith to room 123: ${err}`)\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.error(\"error:\", error);\r\n            });\r\n\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        let target = event.target.name;\r\n        this.setState({[target]: event.target.value})\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <main className={classes.main}>\r\n                <CssBaseline />\r\n                <Paper className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <form className={classes.form}>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"email\">Username</InputLabel>\r\n                            <Input onChange={this.handleChange} value={this.state.username} id=\"email\" name=\"username\" autoComplete=\"name\" autoFocus />\r\n                        </FormControl>\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                            label=\"Remember me\"\r\n                        />\r\n                        <Link to={`/${this.state.username}`}>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Sign in\r\n                            </Button>\r\n                        </Link>\r\n                    </form>\r\n                </Paper>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nLogInForm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(LogInForm);"]},"metadata":{},"sourceType":"module"}