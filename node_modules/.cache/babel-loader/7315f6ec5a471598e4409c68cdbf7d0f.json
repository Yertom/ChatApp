{"ast":null,"code":"import _classCallCheck from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Front end pro\\\\Projects1\\\\ChatApp\\\\chatApp\\\\src\\\\components\\\\AppContainer\\\\AppContainer.js\";\nimport React, { Component, Fragment } from 'react';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Chatkit from '@pusher/chatkit-client';\nimport ConfigFile from '../../config/config';\nimport ChannelsComponent from \"./ChannelsComponent/ChannelsComponent\";\nimport InputComponent from \"./InputComponent/InputComponent\";\nimport CreateChannel from \"./CreateChannel/CreateChannel\";\nimport ChatComponent from \"./ChatComponent/ChatComponent\";\n\nvar AppContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppContainer, _Component);\n\n  function AppContainer(props) {\n    var _this;\n\n    _classCallCheck(this, AppContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppContainer).call(this, props));\n    _this.state = {\n      channelsList: [],\n      currentChannelId: \"\",\n      currentUserId: \"\"\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AppContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var tokenProvider = new Chatkit.TokenProvider({\n        url: ConfigFile.tokenEndpoint\n      });\n      var chatManager = new Chatkit.ChatManager({\n        instanceLocator: ConfigFile.InstanceLocator,\n        userId: \"User1\",\n        tokenProvider: tokenProvider\n      });\n      chatManager.connect().then(function (currentUser) {\n        currentUser.subscribeToRoomMultipart({\n          roomId: currentUser.rooms[0].id,\n          hooks: {\n            onMessage: function onMessage(message) {\n              console.log(message.parts[\"0\"].payload.content);\n            }\n          },\n          massageLimit: 10\n        });\n      }).catch(function (error) {\n        console.error(\"error:\", error);\n      });\n      chatManager.connect().then(function (currentUser) {\n        console.log(currentUser);\n\n        _this2.setState({\n          channelsList: currentUser.rooms,\n          currentChannelId: currentUser.rooms[0].id,\n          currentUserId: currentUser.encodedId\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevState, prevProps) {}\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var inputStyle = {\n        marginLeft: '10px'\n      };\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        wrap: \"nowrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(ChannelsComponent, {\n        channelsList: this.state.channelsList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(ChatComponent, {\n        chatManager: this.state.currentUserId,\n        channelId: this.state.currentChannelId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n        wrap: \"nowrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(CreateChannel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        style: inputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(InputComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AppContainer;\n}(Component);\n\nexport default AppContainer;","map":{"version":3,"sources":["D:\\Front end pro\\Projects1\\ChatApp\\chatApp\\src\\components\\AppContainer\\AppContainer.js"],"names":["React","Component","Fragment","Grid","Chatkit","ConfigFile","ChannelsComponent","InputComponent","CreateChannel","ChatComponent","AppContainer","props","state","channelsList","currentChannelId","currentUserId","handleClick","bind","tokenProvider","TokenProvider","url","tokenEndpoint","chatManager","ChatManager","instanceLocator","InstanceLocator","userId","connect","then","currentUser","subscribeToRoomMultipart","roomId","rooms","id","hooks","onMessage","message","console","log","parts","payload","content","massageLimit","catch","error","setState","encodedId","prevState","prevProps","inputStyle","marginLeft"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;IAGMC,Y;;;;;AAEF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,gBAAgB,EAAE,EAFT;AAGTC,MAAAA,aAAa,EAAE;AAHN,KAAb;AAKA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AAPe;AAQlB;;;;wCAEmB;AAAA;;AAChB,UAAMC,aAAa,GAAG,IAAId,OAAO,CAACe,aAAZ,CAA0B;AAC5CC,QAAAA,GAAG,EAAEf,UAAU,CAACgB;AAD4B,OAA1B,CAAtB;AAIA,UAAMC,WAAW,GAAG,IAAIlB,OAAO,CAACmB,WAAZ,CAAwB;AACxCC,QAAAA,eAAe,EAAEnB,UAAU,CAACoB,eADY;AAExCC,QAAAA,MAAM,EAAE,OAFgC;AAGxCR,QAAAA,aAAa,EAAEA;AAHyB,OAAxB,CAApB;AAMAI,MAAAA,WAAW,CACNK,OADL,GAEKC,IAFL,CAEU,UAAAC,WAAW,EAAI;AACjBA,QAAAA,WAAW,CAACC,wBAAZ,CAAqC;AACjCC,UAAAA,MAAM,EAAEF,WAAW,CAACG,KAAZ,CAAkB,CAAlB,EAAqBC,EADI;AAEjCC,UAAAA,KAAK,EAAE;AACHC,YAAAA,SAAS,EAAE,mBAAAC,OAAO,EAAI;AAClBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,KAAR,CAAc,GAAd,EAAmBC,OAAnB,CAA2BC,OAAvC;AACH;AAHE,WAF0B;AAOjCC,UAAAA,YAAY,EAAE;AAPmB,SAArC;AASH,OAZL,EAaKC,KAbL,CAaW,UAAAC,KAAK,EAAI;AACZP,QAAAA,OAAO,CAACO,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACH,OAfL;AAgBAtB,MAAAA,WAAW,CACNK,OADL,GAEKC,IAFL,CAEU,UAAAC,WAAW,EAAI;AACjBQ,QAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;;AACA,QAAA,MAAI,CAACgB,QAAL,CAAc;AACVhC,UAAAA,YAAY,EAAEgB,WAAW,CAACG,KADhB;AAEVlB,UAAAA,gBAAgB,EAAEe,WAAW,CAACG,KAAZ,CAAkB,CAAlB,EAAqBC,EAF7B;AAGVlB,UAAAA,aAAa,EAAEc,WAAW,CAACiB;AAHjB,SAAd;AAKH,OATL;AAUH;;;uCAEkBC,S,EAAWC,S,EAAW,CAExC;;;kCAEa,CAEb;;;6BAEQ;AACL,UAAIC,UAAU,GAAG;AACbC,QAAAA,UAAU,EAAE;AADC,OAAjB;AAGA,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAE,KAA3B;AAAkC,QAAA,IAAI,EAAE,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAW,oBAAC,iBAAD;AAAmB,QAAA,YAAY,EAAE,KAAKtC,KAAL,CAAWC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX,CADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmB,oBAAC,aAAD;AAAe,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWG,aAAvC;AAAsD,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWE,gBAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB,CAFJ,CADJ,EAKI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAE,KAA3B;AAAkC,QAAA,YAAY,EAAE,QAAhD;AAA0D,QAAA,UAAU,EAAE,QAAtE;AAAgF,QAAA,IAAI,EAAE,QAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAW,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX,CADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,KAAK,EAAEmC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtC,CAFJ,CALJ,CADJ;AAYH;;;;EA3EsBhD,S;;AA8E3B,eAAeS,YAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport Grid from '@material-ui/core/Grid/Grid';\r\nimport Chatkit from '@pusher/chatkit-client';\r\nimport ConfigFile from '../../config/config';\r\nimport ChannelsComponent from \"./ChannelsComponent/ChannelsComponent\";\r\nimport InputComponent from \"./InputComponent/InputComponent\";\r\nimport CreateChannel from \"./CreateChannel/CreateChannel\";\r\nimport ChatComponent from \"./ChatComponent/ChatComponent\";\r\n\r\n\r\nclass AppContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            channelsList: [],\r\n            currentChannelId: \"\",\r\n            currentUserId: \"\",\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const tokenProvider = new Chatkit.TokenProvider({\r\n            url: ConfigFile.tokenEndpoint\r\n        });\r\n\r\n        const chatManager = new Chatkit.ChatManager({\r\n            instanceLocator: ConfigFile.InstanceLocator,\r\n            userId: \"User1\",\r\n            tokenProvider: tokenProvider\r\n        });\r\n\r\n        chatManager\r\n            .connect()\r\n            .then(currentUser => {\r\n                currentUser.subscribeToRoomMultipart({\r\n                    roomId: currentUser.rooms[0].id,\r\n                    hooks: {\r\n                        onMessage: message => {\r\n                            console.log(message.parts[\"0\"].payload.content)\r\n                        }\r\n                    },\r\n                    massageLimit: 10,\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.error(\"error:\", error);\r\n            });\r\n        chatManager\r\n            .connect()\r\n            .then(currentUser => {\r\n                console.log(currentUser);\r\n                this.setState({\r\n                    channelsList: currentUser.rooms,\r\n                    currentChannelId: currentUser.rooms[0].id,\r\n                    currentUserId: currentUser.encodedId,\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevState, prevProps) {\r\n\r\n    }\r\n\r\n    handleClick() {\r\n\r\n    }\r\n\r\n    render() {\r\n        let inputStyle = {\r\n            marginLeft: '10px',\r\n        };\r\n        return (\r\n            <Fragment>\r\n                <Grid container direction={\"row\"} wrap={\"nowrap\"}>\r\n                    <Grid item><ChannelsComponent channelsList={this.state.channelsList}/></Grid>\r\n                    <Grid item xs={10}><ChatComponent chatManager={this.state.currentUserId} channelId={this.state.currentChannelId}/></Grid>\r\n                </Grid>\r\n                <Grid container direction={\"row\"} alignContent={\"center\"} alignItems={\"center\"} wrap={\"nowrap\"}>\r\n                    <Grid item><CreateChannel/></Grid>\r\n                    <Grid item xs={10} style={inputStyle}><InputComponent/></Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppContainer;\r\n"]},"metadata":{},"sourceType":"module"}